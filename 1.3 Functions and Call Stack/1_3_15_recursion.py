"""
n = 3 - кол-во элементов
(1,2,3)
k=2 - количество в одной цепочке
найти C(3,2)=3; C - количество сочетаний (1, 2), (1, 3), (2, 3)
если k > n, невозможно
если C(n, 0) = 1
C(n, k) = C(n - 1, k) + C(n - 1, k - 1).
C(3, 2) = C(3-1, 2) + C(3-1, 2-1) = C(2,2) + C(2,1)
C(2,2) + C(2,1) = 3
C(2,2) = C(1, 2) + C(1, 1) = 0 + 1
C(2,1) = C(1, 1) + C(1, 0) = 1 + 1
Реализуйте программу, которая для заданных n и k вычисляет C(n, k).
Вашей программе на вход подается строка, 
содержащая два целых числа n и k (1 ≤ n ≤ 10, 0 ≤ k ≤ 10).
"""
# n, k = map(int, input().split())

def fun(n,k):
    if (k==0 and n!= 0) or (n==1 and k==1):
        return 1
    elif n == 0:
        return 0
    else:
        return fun(n - 1, k) + fun(n - 1, k - 1)

print(fun(3,2))

#1. (2, 2) + (2, 1)
#2. ((1,2) +(1,1)) + ((1,1)+(1,0)) #3
#3. (0,1) # 0 + 3 